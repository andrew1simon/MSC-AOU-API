datasource db {
  provider = "postgresql"
  url  	= env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum Role {
  USER
  ADMIN
  Mentor
}
enum Team {
  Web   @map(name: "Web Development")
  Ai    @map(name: "Artificial Intelligence")
  Cyber @map(name: "Cyber Security")
  Ui_ux @map(name: "Ui/Ux")
  Data  @map(name: "Data Science")
}
enum TeamTitle {
  Head    @map(name: "Team Head")
  coHead  @map(name: "Team Co-head")
  Member  @map(name: "Team Member")
  Student @map(name: "Student")
}

model User {
  id       String @id @default(uuid())
  userName String  @unique
  name     String
  password String
  img      String?
  team      Team
  role      Role        @default(USER)
  TeamTitle TeamTitle   @default(Student)
  NewsRevision NewsRevisions[]
}
enum NewsStatus {
  Draft
  Published
}
model News {
  id                String @id @default(uuid())
  date              DateTime  @default(now())
  lastUpdate        DateTime  @updatedAt
  revisions         NewsRevisions[] // This field represents the relationship
  currentRevision   CurrentRevision? 
}

model CurrentRevision {
  id       String @id @default(uuid())
  newsId   String @unique
  news     News @relation(fields: [newsId], references: [id], onDelete: Cascade)
  revisionId String @unique
  revision  NewsRevisions @relation(fields: [revisionId], references: [id] , onDelete: Cascade)
}

model NewsRevisions {
  id       String @id @default(uuid())
  newsId   String
  news     News @relation(fields: [newsId], references: [id]) // This field represents the relationship
  status   NewsStatus @default(Published)
  currentRevision CurrentRevision?
  title    String
  img      String?
  subTitle String?
  content  String
  CreatedBy String
  user     User @relation(fields: [CreatedBy], references: [id])
  date     DateTime  @default(now())
}

model events {
  id   String         @id @default(uuid())
  title String
  Createdate  DateTime@default(now())
  subTitle String?
  content String
  lastUpdate DateTime @updatedAt
  eventtime DateTime
  hasImg Boolean      @default(false)
  img    String?
}
